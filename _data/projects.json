    [
      {
        "name": "SIVIC",
        "category": "Choose from: Reconstruction // Visualization // Spectroscopy // Multipurpose",
        "shortDescription": "SIVIC is an open-source, standards-based software framework and application suite for processing and visualization of DICOM MR Spectroscopy data.",
        "imageFile": "LOGO-SIVIC.png",
        "mainURL": "https://sourceforge.net/projects/sivic/",
        "repoURL": "https://github.com/SIVICLab/sivic",
        "principalDevelopers": "Jason C. Crane, Marram P. Olson, and Sarah J. Nelson",
        "longDescription": "SIVIC is an open-source, standards-based software framework and application suite for processing and visualization of DICOM MR Spectroscopy data. Through the use of DICOM, SIVIC aims to facilitate the application of MRS in medical imaging studies.",
        "keywords": [
          "MR Spectroscopy",
          "Data visualization",
          "MRI",
          "Hyperpolarized",
          "Dynamic MRS",
          "Perfusion Visualization and DSC Analysis",
          "DICOM MR Spectroscopy",
          "Metabolite Map Generation"
        ],
        "keyReferences": [
            {
                "referenceText": "SIVIC: Open-Source, Standards-Based Software for DICOM MR Spectroscopy Workflows",
                "referenceURL": " https://pubmed.ncbi.nlm.nih.gov/23970895/"
            }, 
            {
                "referenceText": " Hyperpolarized C-13 MRI data acquisition and analysis in prostate and brain at University of California, San Francisco",
                "referenceURL": " https://pubmed.ncbi.nlm.nih.gov/32189442/"
            } 
        ],
        "extraResources": [
            {
                "resourceType": " Tutorials",
                "URL": "https://sourceforge.net/p/sivic/sivicwiki/Tutorials/"
            },
            {
                "resourceType": "HP MRI Course 2021",
                "URL": "https://hyperpolarizedmri.ucsf.edu/hp-mri-course-2021"
            }
        ],
        "dateAddedToMRHub": "2022-04-18",
        "dateSoftwareLastUpdated": "2021-05-21",
        "citationSearchString": "10.1155/2013/169526",
        "citationCount": "63"
    },
  {
    "name": "pySAP",
    "category": "Reconstruction",
    "shortDescription": "Python Sparse data Analysis Package",
    "imageFile": "PySAP.png",
    "mainURL": "https://python-pysap.readthedocs.io/en/latest/",
    "repoURL": "https://github.com/CEA-COSMIC/pysap",
    "principalDevelopers": "Samuel Farrens, Antoine Grigris, Philippe Ciuciu, Loubna El-Gueddari, Chaithya GR, Zaccharie Ramzi, Guillaume Daval-Frérot,  Pierre-Antoine Comby, and many more.",
    "longDescription": "PySAP offers a large set of fast wavelet transforms and a range of integrated optimization algorithms in Python. The plugin pysap-mri provides methods, tools and examples for MR image reconstruction in various acquisition setups (2D and 3D imaging, Cartesian and non-Cartesian readout, parallel imaging, etc.) in the context of accelerated acquisitions using compressed sensing. This plugin is available on Pypi as pysap-mri 0.1.1. Test data are available in pysap-data",
    "keywords": [
      "Compressed Sensing",
      "Optimisation",
      "Reconstruction",
      "GitHub",
      "Python"
    ],
    "keyReferences": [
      {
        "referenceText": "PySAP: Python Sparse Data Analysis Package for multidisciplinary image processing, S. Farrens et al., Astronomy and Computing 32, 2020",
        "referenceURL": "https://www.sciencedirect.com/science/article/pii/S2213133720300561"
      },
      {
        "referenceText": "PySAP-MRI: a Python Package for MR Image Reconstruction",
        "referenceURL": "http://cosmic.cosmostat.org/wp-content/uploads/2020/02/Abstract_pySAP-MRI_WS-ISMRM2020.pdf"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Tutorials",
        "URL": "https://github.com/CEA-COSMIC/pysap-tutorials"
      }
    ],
    "dateAddedToMRHub": "2022-02-21",
    "dateSoftwareLastUpdated": "2022-01-18",
    "citationSearchString": "17f990ce903008b168e3c6701a7b4bf20885de72",
    "citationCount": "6"
  },
  {
    "name": "Disimpy",
    "category": "Simulation",
    "shortDescription": "Massively parallel Monte Carlo diffusion MR simulator written in Python",
    "imageFile": "disimpy-logo.png",
    "mainURL": "https://disimpy.readthedocs.io",
    "repoURL": "https://github.com/kerkelae/disimpy",
    "principalDevelopers": "Leevi Kerkelä",
    "longDescription": "Disimpy is a Python package for generating simulated diffusion-weighted MR signals that can be useful in the development and validation of data acquisition and analysis methods. The data is generated by Monte Carlo random walk simulations that run in massively parallel on Nvidia CUDA-capable GPUs.",
    "keywords": [
      "diffusion",
      "Monte Carlo",
      "simulation"
    ],
    "keyReferences": [
      {
        "referenceText": "Disimpy: A massively parallel Monte Carlo simulator for generating diffusion-weighted MRI data in Python",
        "referenceURL": "https://doi.org/10.21105/joss.02527"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Tutorial",
        "URL": "https://disimpy.readthedocs.io/en/latest/tutorial.html"
      }
    ],
    "dateAddedToMRHub": "2021-12-08",
    "dateSoftwareLastUpdated": "2022-01-04",
    "citationSearchString": "45d5d220d50a97e0a0c8a14a5979df1d293634f2",
    "citationCount": "4"
  },
  {
    "name": "DECAES.jl",
    "category": "Image processing",
    "shortDescription": "A Julia package with command line and MATLAB interfaces for computing whole-brain T2-distributions in 1-2 minutes.",
    "imageFile": "decaes.png",
    "mainURL": "https://jondeuce.github.io/DECAES.jl/dev/",
    "repoURL": "https://github.com/jondeuce/DECAES.jl",
    "principalDevelopers": "Jonathan Doucette, Christian Kames, and Alexander Rauscher",
    "longDescription": "DEcomposition and Component Analysis of Exponential Signals (DECAES.jl) is a Julia package with command line and MATLAB interfaces which provides fast computations of voxelwise T2-distributions from multiecho spin-echo MRI images (Doucette et al.). This package decreases computation times from hours to minutes compared to its predecessor, the ubcmwf MATLAB toolbox from the UBC MRI Research Centre (Prasloski et al.). DECAES.jl computes T2-distributions by using regularized nonnegative least-squares (NNLS) to project measured MR signals onto basis sets of simulated MR signals computed using the extended phase graph (EPG) algorithm with stimulated echo correction. If the stimulated echo correction is turned off, DECAES.jl can be used for decomposing any multiexponential signal into its monoexponential components. T2-distributions are used in applications such as myelin water imaging (Mackay et al.) and luminal water imaging (Sabouri et al.).",
    "keywords": [
      "MRI",
      "Brain",
      "Prostate",
      "Myelin Water Imaging",
      "Luminal Water Imaging"
    ],
    "keyReferences": [
      {
        "referenceText": "Doucette J, Kames C, Rauscher A. DECAES – DEcomposition and Component Analysis of Exponential Signals. Zeitschrift für Medizinische Physik 2020; 30: 271–278.",
        "referenceURL": "https://doi.org/10.1016/j.zemedi.2020.04.001"
      },
      {
        "referenceText": "Prasloski T, Mädler B, Xiang Q-S, et al. Applications of stimulated echo correction to multicomponent T2 analysis. Magnetic Resonance in Medicine 2012; 67: 1803–1814.",
        "referenceURL": "https://doi.org/10.1002/mrm.23157"
      },
      {
        "referenceText": "Mackay A, Whittall K, Adler J, et al. In vivo visualization of myelin water in brain by magnetic resonance. Magnetic Resonance in Medicine 1994; 31: 673–677.",
        "referenceURL": "https://doi.org/10.1002/mrm.1910310614"
      },
      {
        "referenceText": "Sabouri S, Chang SD, Savdie R, et al. Luminal Water Imaging: A New MR Imaging T2 Mapping Technique for Prostate Cancer Diagnosis. Radiology 2017; 284: 451–459.",
        "referenceURL": "https://doi.org/10.1148/radiol.2017161687"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Tutorial",
        "URL": "https://github.com/jondeuce/mwiexamples"
      },
      {
        "resourceType": "Documentation",
        "URL": "https://jondeuce.github.io/DECAES.jl/dev/"
      },
      {
        "resourceType": "GitHub",
        "URL": "https://github.com/jondeuce/DECAES.jl"
      },
      {
        "resourceType": "JuliaCon 2021 Talk",
        "URL": "https://www.youtube.com/watch?v=6OxsK2R5VkA"
      }
    ],
    "dateAddedToMRHub": "2021-12-06",
    "dateSoftwareLastUpdated": "2022-03-03",
    "citationSearchString": "10.1016/j.zemedi.2020.04.001",
    "citationCount": "6"
  },
  {
    "name": "torchkbnufft",
    "category": "Reconstruction",
    "shortDescription": "A high-level, easy-to-deploy non-uniform Fast Fourier Transform in PyTorch.",
    "imageFile": "torchkbnufft.png",
    "mainURL": "https://torchkbnufft.readthedocs.io/en/stable",
    "repoURL": "https://github.com/mmuckley/torchkbnufft",
    "principalDevelopers": "Matthew J. Muckley, Ruben Stern, Tullie Murrell and Florian Knoll",
    "longDescription": "torchkbnufft implements a non-uniform Fast Fourier Transform with Kaiser-Bessel gridding in PyTorch. The implementation is completely in Python, facilitating flexible deployment in readable code with no compilation. NUFFT functions are each wrapped as a torch.autograd.Function, allowing backpropagation through NUFFT operators for training neural networks. This package was inspired in large part by the NUFFT implementation in the Michigan Image Reconstruction Toolbox (Matlab).",
    "keywords": [
      "PyTorch",
      "deep learning",
      "NUFFT",
      "reconstruction"
    ],
    "keyReferences": [
      {
        "referenceText": "MJ Muckley, R Stern, T Murrell, F Knoll. TorchKbNufft: A high-level, hardware-agnostic non-uniform fast Fourier transform. In ISMRM Data Sampling & Image Reconstruction Workshop, 2020.",
        "referenceURL": "https://www.ismrm.org/workshops/2020/Data/program.php"
      }
    ],
    "extraResources": [
      {
        "resourceType": "PyPI",
        "URL": "https://pypi.org/project/torchkbnufft/"
      },
      {
        "resourceType": "Documentation",
        "URL": "https://torchkbnufft.readthedocs.io/en/stable/"
      },
      {
        "resourceType": "GitHub",
        "URL": "https://github.com/mmuckley/torchkbnufft/"
      }
    ],
    "dateAddedToMRHub": "2021-11-01",
    "dateSoftwareLastUpdated": "2022-02-15",
    "citationSearchString": "N/A",
    "citationCount": "0"
  },
  {
    "name": "Conductance Model for Brain Structural Connectivity",
    "category": "Reconstruction",
    "shortDescription": "Matlab toolbox for conductance-based computation of brain connectivity from Diffusion MRI.",
    "imageFile": "Conductance.png",
    "mainURL": "https://www.nitrc.org/projects/conductance",
    "repoURL": "https://github.com/ainafp/FVT4DWI",
    "principalDevelopers": "<a href=\"https://ainafp.github.io\">Aina Frau-Pascual</a>",
    "longDescription": "This toolbox computes the structural connectivity of the brain (connectome) from diffusion-weighted MRI, using a conductance-based mathematical model introduced by Frau-Pascual et al (NeuroImage, 2019). Example scripts for HCP and ADNI are provided.",
    "keywords": [
      "Diffusion MRI",
      "Conductance",
      "Tractography",
      "Connectomics",
      "DTI"
    ],
    "keyReferences": [
      {
        "referenceText": "A. Frau-Pascual, M. Fogarty, B. Fischl, A. Yendiki, and I. Aganj, “Quantification of structural brain connectivity via a conductance model,” NeuroImage, vol. 189, pp. 485–496, 2019.",
        "referenceURL": "https://doi.org/10.1016/j.neuroimage.2019.01.033"
      },
      {
        "referenceText": "A. Frau-Pascual, J. Augustinack, D. Varadarajan, A. Yendiki, D. H. Salat, B. Fischl, and I. Aganj, “Conductance-based structural brain connectivity in aging and dementia,” Brain Connectivity, vol. 11, no. 7, 2021.",
        "referenceURL": "http://doi.org/10.1089/brain.2020.0903"
      }
    ],
    "extraResources": [
      {
        "resourceType": "GitHub",
        "URL": "https://github.com/ainafp/FVT4DWI"
      },
      {
        "resourceType": "NITRC",
        "URL": "https://www.nitrc.org/projects/conductance"
      },
      {
        "resourceType": "Matlab File Exchange",
        "URL": "https://www.mathworks.com/matlabcentral/fileexchange/81338-fvt4dwi"
      },
      {
        "resourceType": "Example script",
        "URL": "https://github.com/ainafp/FVT4DWI/blob/master/Examples/Connectivity/run_conductance_hcp.m"
      }
    ],
    "dateAddedToMRHub": "2021-08-06",
    "dateSoftwareLastUpdated": "2019-02-20",
    "citationSearchString": "10.1016/j.neuroimage.2019.01.033",
    "citationCount": "16"
  },
  {
    "name": "Image Segmentation and Registration in Matlab",
    "category": "Image processing",
    "shortDescription": "Matlab tools for unsupervised and supervised segmentation, and deformable and rigid registration of medical images.",
    "imageFile": "MSIreg.png",
    "mainURL": "https://nmr.mgh.harvard.edu/~iman/software",
    "repoURL": "",
    "principalDevelopers": "<a href=\"https://nmr.mgh.harvard.edu/~iman\">Iman Aganj</a>",
    "longDescription": "These tools are useful for the following neuro- and biomedical image processing and analyses:  * Unsupervised medical image segmentation based on the local center of mass.  * Supervised medical image segmentation via expected-label-value computation.  * Deformable registration of medical images using a mid-space-independent algorithm.  * Rigid registration of multimodal images guided by segmentation.  * Tissue thickness computation.  * MRI image fusion and super-resolution using wavelets.  * Diffusion MRI analysis.",
    "keywords": [
      "Segmentation",
      "Registration",
      "Tissue thickness measurement",
      "Wavelet Fusion"
    ],
    "keyReferences": [
      {
        "referenceText": "The reference corresponding to each toolbox is listed in the software page.",
        "referenceURL": "https://nmr.mgh.harvard.edu/~iman/software"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Software page",
        "URL": "https://nmr.mgh.harvard.edu/~iman/software"
      }
    ],
    "dateAddedToMRHub": "2021-08-06",
    "dateSoftwareLastUpdated": "2021-06-26",
    "citationSearchString": "10.1038/s41598-018-31333-5",
    "citationCount": "50"
  },
  {
    "name": "seeVR",
    "category": "Toolbox",
    "shortDescription": "A Matlab toolbox for analyzing cerebro-vascular reactivity (CVR) data",
    "imageFile": "seeVR.png",
    "mainURL": "https://seeVR.nl",
    "repoURL": "https://github.com/abhogal-lab/seeVR",
    "principalDevelopers": "Alex A. Bhogal",
    "longDescription": "The seeVR toolbox consists of a series of Matlab functions designed for the analysis of hemodynamic response data. The primary purpose is to generate parametric maps of MR signal changes in response to physiological stimuli such as hypercapnia induced vasodilation or hyperoxia/hypoxia induced changes in hemoglobin saturation. The seeVR functions are also suitable for certain types of resting-state analysis, examining HRFs and probing dynamic temporal response characteristics.",
    "keywords": [
      "Vascular Reactivity",
      "Hypercapnia",
      "Hyperoxia",
      "CVR",
      "Hemodynamic Response",
      "Cerebral Physiology"
    ],
    "keyReferences": [
      {
        "referenceText": "Champagne AA, Bhogal AA,  Insights into cerebral tissue-specific response to respiratory challenges at 7T: evidence for combined blood flow and CO2-mediated effects, Frontiers in Physiology 12, 18",
        "referenceURL": "https://www.frontiersin.org/articles/10.3389/fphys.2021.601369/full"
      }
    ],
    "dateAddedToMRHub": "2021-08-01",
    "dateSoftwareLastUpdated": "2022-02-19",
    "citationSearchString": "aa1f729decd1a5a0d56de10446a8e268367cb927",
    "citationCount": "3"
  },
  {
    "name": "Diffusion MRI CSA-ODF and Hough Tractography",
    "category": "Reconstruction",
    "shortDescription": "Matlab toolbox for Diffusion MRI CSA-ODF computation, Hough tractography, and connectomic analysis.",
    "imageFile": "HoughTract.png",
    "mainURL": "https://www.nitrc.org/projects/csaodf-hough",
    "repoURL": "https://www.mathworks.com/matlabcentral/fileexchange/62516-csa-qbi-and-hough-tractography-for-diffusion-mri",
    "principalDevelopers": "<a href=\"https://nmr.mgh.harvard.edu/~iman\">Iman Aganj</a>",
    "longDescription": "This is a diffusion-weighted MRI processing Matlab toolbox (including binaries), which can be used to:  * Compute the Q-Ball Imaging Orientation Distribution Function in Constant Solid Angle (CSA-ODF) (Aganj et al, MRM 2010).  * Perform Hough-transform tractography (Aganj et al, MedIA 2011).  * Visualize ODFs and tracts, and export them for further analysis.  * Verify the correctness of the diffusion gradient table (Aganj, Sci Rep 2018).  * Compute and interactively visualize the connectivity matrix.  * Augment the connectivity matrix with indirect connections (Aganj et al, ISMRM 2014).",
    "keywords": [
      "Diffusion MRI",
      "Q-ball Imaging",
      "Tractography",
      "Connectomics",
      "HARDI"
    ],
    "keyReferences": [
      {
        "referenceText": "I. Aganj, C. Lenglet, G. Sapiro, E. Yacoub, K. Ugurbil, and N. Harel, “Reconstruction of the orientation distribution function in single and multiple shell q-ball imaging within constant solid angle,” Magnetic Resonance in Medicine, vol. 64, no. 2, pp. 554–566, 2010.",
        "referenceURL": "https://doi.org/10.1002/mrm.22365"
      },
      {
        "referenceText": "I. Aganj, C. Lenglet, N. Jahanshad, E. Yacoub, N. Harel, P. Thompson, and G. Sapiro, “A Hough transform global probabilistic approach to multiple-subject diffusion MRI tractography,” Medical Image Analysis, vol. 15, no. 4, pp. 414–425, 2011.",
        "referenceURL": "https://doi.org/10.1016/j.media.2011.01.003"
      },
      {
        "referenceText": "I. Aganj, “Automatic verification of the gradient table in diffusion-weighted MRI based on fiber continuity,” Scientific Reports, vol. 8, Article no. 16541, 2018.",
        "referenceURL": "https://doi.org/10.1038/s41598-018-34940-4"
      },
      {
        "referenceText": "I. Aganj, G. Prasad, P. Srinivasan, A. Yendiki, P. M. Thompson, and B. Fischl, “Structural brain network augmentation via Kirchhoff's laws,” in Proceedings of the Joint Annual Meeting of ISMRM-ESMRMB, Milan, Italy, 2014.",
        "referenceURL": "https://cds.ismrm.org/protected/14MProceedings/PDFfiles/2665.pdf"
      }
    ],
    "extraResources": [
      {
        "resourceType": "NITRC",
        "URL": "https://www.nitrc.org/projects/csaodf-hough"
      },
      {
        "resourceType": "Matlab File Exchange",
        "URL": "https://www.mathworks.com/matlabcentral/fileexchange/62516-csa-qbi-and-hough-tractography-for-diffusion-mri"
      },
      {
        "resourceType": "Example script",
        "URL": "https://viewer.mathworks.com/?viewer=plain_code&url=https%3A%2F%2Fwww.mathworks.com%2Fmatlabcentral%2Fmlc-downloads%2Fdownloads%2F9a09c2f3-77a9-44b3-a775-a32ba8bb9f2a%2F5aac6159-82f0-4947-9b4b-503336d99ca4%2Ffiles%2FEXAMPLE.m"
      }
    ],
    "dateAddedToMRHub": "2021-08-04",
    "dateSoftwareLastUpdated": "2021-06-26",
    "citationSearchString": "10.1002/mrm.22365",
    "citationCount": "351"
  },
  {
    "name": "MRIgeneralizedBloch.jl",
    "category": "Simulation",
    "shortDescription": "Implementation of the generalized Bloch equations for modeling magnetization transfer.",
    "mainURL": "https://jakobasslaender.github.io/MRIgeneralizedBloch.jl/stable/",
    "repoURL": "https://github.com/JakobAsslaender/MRIgeneralizedBloch.jl",
    "principalDevelopers": "<a href=\"https://med.nyu.edu/faculty/jakob-asslaender\">Jakob Assländer</a>",
    "longDescription": "MRIgeneralizedBloch.jl is a Julia package that implements the generalized Bloch equations for modeling the dynamics of the semi-solid spin pool in MRI, and its exchange with the free spin pool. It utilizes the DifferentialEquations.jl package to solve integro-differential equation. It also implements a linear approximation of the generalized Bloch equations that assumes rectangular radio frequency pulses and uses matrix exponentiation of static arrays, which results in almost non-allocating and extremely fast code. For more details and scripts that reproduce all figures in the paper, please refer to above linked documentation.",
    "keywords": [
      "MT",
      "magnetization transfer",
      "modeling",
      "qMT",
      "quantitative magnetization transfer",
      "Bloch"
    ],
    "keyReferences": [
      {
        "referenceText": "Assländer, J, Gultekin, C, Flassbeck, S, Glaser, SJ, Sodickson, DK (2021), Generalized Bloch model: a theory for pulsed magnetization transfer, arXiv ID 2107.11000",
        "referenceURL": "https://arxiv.org/pdf/2107.11000.pdf"
      }
    ],
    "dateAddedToMRHub": "2021-07-26",
    "dateSoftwareLastUpdated": "2022-01-17",
    "citationSearchString": "30567d7cd59f7a9a16f387b4d57bcd15f5d2d59b",
    "citationCount": "0"
  },
  {
    "name": "Madym",
    "category": "Image processing",
    "shortDescription": "C++ toolkit for DCE-MRI analysis, including baseline T1 mapping, AIF detection and tracer-kinetic model fitting",
    "imageFile": "madym.png",
    "mainURL": "https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx",
    "repoURL": "https://github.com/michaelberks/madym_cxx",
    "principalDevelopers": "Michael Berks, Geoff Parker, Gio Buonaccorsi, Anita Banerji",
    "longDescription": "Madym is a C++ toolkit for quantitative DCE-MRI analysis developed in the QBI Lab at the University of Manchester, UK. It comprises a set of command line tools and a graphical user-interface based on an extendable C++ library. It is cross-platform, and requires few external libraries to build from source. Pre-built binaries for Windows, MacOS and Linux are available. We have also developed complementary interfaces in Matlab and python, that allow the flexibility of developing in those scripting languages, while allowing C++ to do the heavy-duty computational work of tracer-kinetic model fitting (see links below). These can either be used by building the C++ tools from source (https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/-/wikis/build_instructions) or by installing them from one of the pre-built binaries (https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/-/wikis/prebuilt_binaries). Note the repository linked here is a mirror of the master branch from the main project on our public GitLab group. To contribute to the project, or to view the project wiki, please visit the main repository at https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx",
    "keywords": [
      "DCE-MRI",
      "tracer-kinetic modelling",
      "T1 mapping",
      "AIF"
    ],
    "keyReferences": [
      {
        "referenceText": "Latest paper describing a new framework for DCE-MRI tracer-kinetic model fitting implemented in Madym",
        "referenceURL": "https://onlinelibrary.wiley.com/doi/pdfdirect/10.1002/mrm.28798"
      },
      {
        "referenceText": "Original paper describing the Parker AIF functional form used in Madym",
        "referenceURL": "https://onlinelibrary.wiley.com/doi/full/10.1002/mrm.21066"
      },
      {
        "referenceText": "Clinical paper in which Madym was used to perform DCE analysis",
        "referenceURL": "https://www.nature.com/articles/s41467-018-07174-1"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Main wiki for documentation",
        "URL": "https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/-/wikis/home"
      },
      {
        "resourceType": "Python wrappers to main C++ toolkit",
        "URL": "https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_python"
      },
      {
        "resourceType": "Matlab wrappers to main C++ toolkit",
        "URL": "https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_matlab"
      },
      {
        "resourceType": "Instructions on running the example test dataset",
        "URL": "https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/-/wikis/example_scripts"
      },
      {
        "resourceType": "Video showing basic use of the GUI to run the examples test dataset",
        "URL": "https://gitlab.com/manchester_qbi/manchester_qbi_public/madym_cxx/-/wikis/gui_demo.mp4"
      }
    ],
    "dateAddedToMRHub": "2021-05-19",
    "dateSoftwareLastUpdated": "2022-02-18",
    "citationSearchString": "10.1002/mrm.28798",
    "citationCount": "1"
  },
  {
    "name": "DSI Studio",
    "category": "Image processing",
    "shortDescription": "A Tractography Tool for Diffusion MRI Analysis",
    "imageFile": "dsistudio.png",
    "mainURL": "https://github.com/frankyeh/DSI-Studio",
    "repoURL": "https://github.com/frankyeh/DSI-Studio",
    "principalDevelopers": "Fang-Cheng (Frank) Yeh",
    "longDescription": "DSI Studio is a tractography software tool that maps brain connections and correlates findings with neuropsychological disorders. It is a collective implementation of several diffusion MRI methods, including diffusion tensor imaging (DTI), generalized q-sampling imaging (GQI), q-space diffeomorphic reconstruction (QSDR), diffusion MRI connectometry, and generalized deterministic fiber tracking.",
    "keywords": [
      "Tractography",
      "Fiber Tracking",
      "Visualization",
      "Diffusion MRI",
      "Connectome"
    ],
    "keyReferences": [
      {
        "referenceText": "Generalized q-sampling imaging",
        "referenceURL": "https://pubmed.ncbi.nlm.nih.gov/20304721/"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Standalone Packages",
        "URL": "http://dsi-studio.labsolver.org/dsi-studio-download"
      },
      {
        "resourceType": "Documentations",
        "URL": "http://dsi-studio.labsolver.org/Manual"
      },
      {
        "resourceType": "User Forum",
        "URL": "https://groups.google.com/g/dsi-studio"
      }
    ],
    "dateAddedToMRHub": "2021-05-17",
    "dateSoftwareLastUpdated": "2022-03-04",
    "citationSearchString": "10.1109/TMI.2010.2045126",
    "citationCount": "572"
  },
  {
    "name": "MyoQMRI",
    "category": "Image processing",
    "shortDescription": "Fast quantitative water T2 mapping for muscle MRI",
    "imageFile": "myoqmri.png",
    "mainURL": "https://github.com/fsantini/MyoQMRI",
    "repoURL": "https://github.com/fsantini/MyoQMRI",
    "principalDevelopers": "Francesco Santini, Matthias Weigel",
    "longDescription": "This project is an open-source effort to put together tools for quantitative MRI of the muscles. It is written in Python and thus portable and multiplatform.\nCurrently, it supports GPU (cuda)-accelerated water T2 mapping from multi echo spin echo images.\nThe fitting procedure is primarily based on extended phase graph simulation of the multi echo spin echo signal. Slice profile is taken into account.\nFor improved accuracy, a fat fraction map can be given as an input to constrain the fitting.\nB1 and Fat Fraction maps are generated as a byproduct of the fitting.",
    "keywords": [
      "Extended Phase Graph",
      "GPU",
      "Python",
      "Muscle MRI",
      "Water T2",
      "Fat/Water Imaging"
    ],
    "keyReferences": [
      {
        "referenceText": "Fast open-source toolkit for water T2 mapping in the presence of fat from multi-echo spin-echo acquisitions for muscle MRI",
        "referenceURL": "https://www.frontiersin.org/articles/10.3389/fneur.2021.630387/full"
      }
    ],
    "extraResources": [

    ],
    "dateAddedToMRHub": "2021-03-01",
    "dateSoftwareLastUpdated": "2021-02-26",
    "citationSearchString": "10.3389/fneur.2021.630387",
    "citationCount": "2"
  },
  {
    "name": "MRQy",
    "category": "Multipurpose",
    "shortDescription": "A new quality assessment and evaluation tool for MRI data",
    "imageFile": "MRQy.png",
    "mainURL": "https://github.com/ccipd/MRQy",
    "repoURL": "https://github.com/ccipd/MRQy",
    "principalDevelopers": "Amir Reza Sadri, Satish E. Viswanath",
    "longDescription": "MRQy is a new open-source quality control and assurance tool for MR imaging data, which can be used as a pre-analytical step when developing computational pipelines including radiomics, image analysis, and machine learning. MRQy leverages a Python-JavaScript framework and has been specialized for analyzing large-scale MRI cohorts through the following modules: (i) automatic foreground detection for any MR image from anybody region, from which it will (ii) extract a series of imaging-specific metadata and quality measures generalized to work with any structural MR sequence, in order to (iii) compute representations that capture relevant MR image quality trends in a data cohort. These are presented within a specialized HTML5-based front-end which can be easily interrogated by the end-user to identify batch effects and imaging artifacts towards curation of MR imaging cohorts of acceptable quality for model development.",
    "keywords": [
      "Quality Control",
      "Quality Assessment",
      "Imaging Cohort Curation",
      "Site Variations",
      "Scanner Variations",
      "Batch Effects",
      "Foreground Detection",
      "Metadata",
      "Image Quality Metrics (IQMs)",
      "Processed Data"
    ],
    "keyReferences": [
      {
        "referenceText": "MRQy: An Open-Source Tool for Quality Control of MR Imaging Data",
        "referenceURL": "https://arxiv.org/abs/2004.04871v2"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Github wiki homepage (4 pages)",
        "URL": "https://github.com/ccipd/MRQy/wiki"
      }
    ],
    "dateAddedToMRHub": "2020-08-14",
    "dateSoftwareLastUpdated": "2022-01-24",
    "citationSearchString": "0804898055d61e965e64e8bba8e60ce7e03b6ef0",
    "citationCount": "11"
  },
  {
    "name": "TED",
    "category": "Reconstruction",
    "shortDescription": "A Matlab toolbox for Temporal Differences (TED) Compressed Sensing - a method for fast dynamic MRI",
    "imageFile": "TED.png",
    "mainURL": "https://github.com/EfratShimron/CORE-PI-toolbox",
    "repoURL": "https://github.com/EfratShimron/CORE-PI-toolbox",
    "principalDevelopers": "Efrat Shimron, William Grissom, Haim Azhari",
    "longDescription": "TED is a Compressed Sensing method for rapid dynamic MRI which enables reconstruction from highly subsampleded k-space data. It was demonstrated in our paper for reconstruction of temperature change in MR-guided-HIFU, yet it is general and hence can be applied to other dynamic MRI datasets. It is suitable for single-coil and multi-coil acquisitions.",
    "keywords": [
      "reconstruction",
      "dynamic MRI",
      "single coil",
      "parallel imaging",
      "undersampling",
      "sparsity",
      "temperature reconstruction",
      "MRgHIFU"
    ],
    "keyReferences": [
      {
        "referenceText": "Temporal differences (TED) compressed sensing: a method for fast MRgHIFU temperature imaging",
        "referenceURL": "https://onlinelibrary.wiley.com/doi/abs/10.1002/nbm.4352"
      }
    ],
    "extraResources": [
      {
      }
    ],
    "dateAddedToMRHub": "2020-07-11",
    "dateSoftwareLastUpdated": "2020-05-09",
    "citationSearchString": "",
    "citationCount": "0"
  },
  {
    "name": "CORE-Deblur",
    "category": "Reconstruction",
    "shortDescription": "A Matlab toolbox for CORE-Deblur - a method for accelerating Compressed Sensing Parallel MRI reconstruction",
    "imageFile": "DEBLUR2.png",
    "mainURL": "https://github.com/EfratShimron/CORE_Deblur_toolbox",
    "repoURL": "https://github.com/EfratShimron/CORE_Deblur_toolbox",
    "principalDevelopers": "Efrat Shimron, Andrew Webb, Haim Azhari",
    "longDescription": "CORE-Deblur is a general parallel-MRI reconstruction method which reduces the number of Compressed Sensing iterations by 10-fold. This toolbox includes Matlab code and demonstrations of the method for in-vivo datasets",
    "keywords": [
      "reconstruction",
      "parallel imaging",
      "Compressed Sensing",
      "undersampling",
      "sparsity"
    ],
    "keyReferences": [
      {
        "referenceText": "CORE-Deblur: Parallel MRI Reconstruction by Deblurring using Compressed Sensing",
        "referenceURL": "https://www.sciencedirect.com/science/article/pii/S0730725X20301879?dgcid=coauthor"
      }
    ],
    "extraResources": [
      {
      }
    ],
    "dateAddedToMRHub": "2020-07-11",
    "dateSoftwareLastUpdated": "2020-05-14",
    "citationSearchString": "005ce859bd64cfcc9c2990f384cbea458e215be6",
    "citationCount": "1"
  },
  {
    "name": "ExploreASL",
    "category": "Image processing",
    "shortDescription": "Pipeline and toolbox for image processing, QC and visualization of arterial spin labeling perfusion MR images",
    "imageFile": "ExploreASL.png",
    "mainURL": "https://ExploreASL.org",
    "repoURL": "https://github.com/ExploreASL/ExploreASL",
    "principalDevelopers": "Henk Mutsaerts, Jan Petr, Michael Stritt, Pieter Vandemaele, Paul Groot",
    "longDescription": "ExploreASL is designed as a multi-OS, open source, collaborative framework that facilitates cross-pollination between image processing method developers and clinical investigators. It is based on Matlab, SPM, CAT12, LST. ExploreASL provides a complete head - to - tail approach that runs fully automatically, encompassing all necessary tasks from data import and structural segmentation, registration and normalization, up to CBF quantification.In addition, the software package includes and quality control(QC) procedures and region - of -interest(ROI) as well as voxel - wise analysis on the extracted data.To - date, ExploreASL has been used for processing~10000 ASL datasets from all major MRI vendors and ASL sequences, and a variety of patient populations, representing~30 studies.The ultimate goal of ExploreASL is to combine data from multiple studies to identify disease related perfusion patterns that may prove crucial in using ASL as a diagnostic took and enhance our understanding of the interplay of perfusion and structural changes in neurodegenerative pathophysiology. Additionally, this (semi-) automatic pipeline allows us to minimize manual intervention, which increases the reproducibility of studies.",
    "keywords": [
      "ASL",
      "perfusion",
      "MRI",
      "image processing",
      "quality control",
      "clinical"
    ],
    "keyReferences": [
      {
        "referenceText": "Mutsaerts, H, Petr, J, Groot, P, Vandemaele, P, et al. ExploreASL: An Image Processing Pipeline for Multi-Center ASL Perfusion MRI Studies. NeuroImage. 2020, Jun 8;219:117031)",
        "referenceURL": "https://pubmed.ncbi.nlm.nih.gov/32526385/"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Video Tutorials on the website",
        "URL": "https://sites.google.com/view/exploreasl/exploreasl/videotutorials"
      }
    ],
    "dateAddedToMRHub": "2020-07-07",
    "dateSoftwareLastUpdated": "2021-12-29",
    "citationSearchString": "10.1016/j.neuroimage.2020.117031",
    "citationCount": "18"
  },
  {
    "name": "QMRITools",
    "category": "Multipurpose",
    "shortDescription": "`QMRITools` is written in Mathematica using Wolfram Workbench and Eclipse and contains a collection of tools and functions for processing quantitative MRI data.",
    "imageFile": "QMRITools.png",
    "mainURL": "https://mfroeling.github.io/QMRITools/",
    "repoURL": "https://github.com/mfroeling/QMRITools",
    "principalDevelopers": "Martijn Froeling",
    "longDescription": "QMRITools is written in Mathematica using Wolfram Workbench and Eclipse and contains a collection of tools and functions for processing quantitative MRI data. The toolbox does not provide a GUI and its primary goal is to allow for fast and batch data processing, and facilitate development and prototyping of new functions. The core of the toolbox contains various functions for data manipulation and restructuring. The toolbox was developed mostly in the context of quantitative muscle (Froeling et al. 2012), nerve and cardiac magnetic resonance imaging. The library of functions grows along with the research it is used for and started as a toolbox to analyze DWI data of muscle. Since then it has grown to include many other features such as cardiac analysis (tagging and T1 mapping), dixon reconstruction, EPG modeling and fitting, j-coupling simulations and more. It currently contains over 350 custom functions (over 20.000 lines of code) complete with documentation and demonstrations.",
    "keywords": [
      "Diffusion tensor imaging",
      "Mathematica",
      "Image Analysis",
      "Simulation",
      "Visualisation",
      "Spectroscopy",
      "Image processing",
      "Cardiac MRI",
      "Dixon reconstruction",
      "EPG based T2 fitting"
    ],
    "keyReferences": [
      {
        "referenceText": "JOSS publication. QMRTools: a Mathematica toolbox for quantitative MRI analysis.",
        "referenceURL": "https://joss.theoj.org/papers/10.21105/joss.01204"
      },
      {
        "referenceText": "First use of the toolbox. Diffusion‐tensor MRI reveals the complex muscle architecture of the human forearm",
        "referenceURL": "https://onlinelibrary.wiley.com/doi/10.1002/jmri.23608"
      },
      {
        "referenceText": "First reproducibility evaluation. Reproducibility of diffusion tensor imaging in human forearm muscles at 3.0 T in a clinical setting",
        "referenceURL": "https://onlinelibrary.wiley.com/doi/full/10.1002/mrm.22477"
      },
      {
        "referenceText": "Recent multi center validation. Multi‐center evaluation of stability and reproducibility of quantitative MRI measures in healthy calf muscles",
        "referenceURL": "https://onlinelibrary.wiley.com/doi/abs/10.1002/nbm.4119"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Online documention using Mathematica documentions",
        "URL": "https://mfroeling.github.io/QMRITools/htmldoc/guide/QMRITools.html"
      }
    ],
    "dateAddedToMRHub": "2020-05-25",
    "dateSoftwareLastUpdated": "2022-02-25",
    "citationSearchString": "CorpusID:195755688",
    "citationCount": "11"
  },
  {
    "name": "CORE-PI",
    "category": "Reconstruction",
    "shortDescription": "A Matlab toolbox for CORE-PI - a parameter-free parallel MRI reconstruction method",
    "imageFile": "core_pi.png",
    "mainURL": "https://github.com/EfratShimron/CORE-PI-toolbox",
    "repoURL": "https://github.com/EfratShimron/CORE-PI-toolbox",
    "principalDevelopers": "Efrat Shimron, Andrew Webb, Haim Azhari",
    "longDescription": "CORE-PI is a general parallel-MRI reconstruction method. It is linear (non-iterative) and does not require calibration of any parameters. This toolbox includes Matlab code for implementing CORE-PI and demonstrations of the method for a simulated phantom and in-vivo datasets",
    "keywords": [
      "reconstruction",
      "parallel imaging",
      "undersampling",
      "sparsity",
      "parameter-free",
      "wavelet"
    ],
    "keyReferences": [
      {
        "referenceText": "CORE‐PI: Non‐iterative convolution‐based reconstruction for parallel MRI in the wavelet domain‏",
        "referenceURL": "https://aapm.onlinelibrary.wiley.com/doi/full/10.1002/mp.13260"
      }
    ],
    "extraResources": [
      {
      }
    ],
    "dateAddedToMRHub": "2019-12-25",
    "dateSoftwareLastUpdated": "2020-05-09",
    "citationSearchString": "091ad971f140c40403eb8dd0e35c4863d6c434ee",
    "citationCount": "4"
  },
  {
    "name": "MRIReco.jl",
    "category": "Reconstruction",
    "shortDescription": "MRIReco.jl: Julia Package for Image Reconstruction",
    "imageFile": "mrireco.png",
    "mainURL": "https://github.com/MagneticResonanceImaging/MRIReco.jl",
    "repoURL": "https://github.com/MagneticResonanceImaging/MRIReco.jl",
    "principalDevelopers": "Tobias Knopp, Mirco Grosser",
    "longDescription": "An Extensible and Modular Open-Source Image Reconstruction Framework written in Julia",
    "keywords": [
      "reconstruction",
      "julia",
      "compressed sensing",
      "field inhomgeneity",
      "sparse sampling",
      "NFFT",
      "ISMRMRD"
    ],
    "keyReferences": [
      {
        "referenceText": "MRIReco.jl: An Extensible Open-Source Image Reconstruction Framework written in Julia",
        "referenceURL": "http://indexsmart.mirasmart.com/ISMRM2019/PDFfiles/4835.html"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Documentation",
        "URL": "https://magneticresonanceimaging.github.io/MRIReco.jl/latest/"
      }
    ],
    "dateAddedToMRHub": "2019-10-16",
    "dateSoftwareLastUpdated": "2022-02-27",
    "citationSearchString": "n/a",
    "citationCount": "0"
  },
  {
    "name": "NLSAM",
    "category": "Reconstruction",
    "shortDescription": "Non Local Spatial and Angular Matching (NLSAM) denoising algorithm for diffusion MRI",
    "imageFile": "nlsam.png",
    "mainURL": "https://github.com/samuelstjean/nlsam",
    "repoURL": "https://github.com/samuelstjean/nlsam",
    "principalDevelopers": "Samuel St-Jean",
    "longDescription": "The reference implementation for the Non Local Spatial and Angular Matching (NLSAM) denoising algorithm for diffusion MRI",
    "keywords": [
      "Diffusion MRI",
      "denoising",
      "python"
    ],
    "keyReferences": [
      {
        "referenceText": "Non Local Spatial and Angular Matching : Enabling higher spatial resolution diffusion MRI datasets through adaptive denoising",
        "referenceURL": "https://doi.org/10.1016/j.media.2016.02.010"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Documentation",
        "URL": "https://nlsam.readthedocs.io/"
      },
      {
        "resourceType": "Example",
        "URL": "https://github.com/samuelstjean/nlsam/blob/master/example/README.md"
      }
    ],
    "dateAddedToMRHub": "2019-06-19",
    "dateSoftwareLastUpdated": "2021-09-17",
    "citationSearchString": "10.1016/j.media.2016.02.010",
    "citationCount": "59"
  },
  {
    "name": "Gannet",
    "category": "Spectroscopy",
    "shortDescription": "Open-source, MATLAB-based software for automated processing and quantification of edited MRS data.",
    "imageFile": "gannet.png",
    "mainURL": "https://github.com/richardedden/Gannet3.0",
    "repoURL": "https://github.com/richardedden/Gannet3.0",
    "principalDevelopers": "Richard Edden, Mark Mikkelsen, Georg Oeltzschner, Muhammad Saleh, Nicolaas Puts, C. John Evans (former), Ashley Harris (former)",
    "longDescription": "Gannet is an open-source, MATLAB-based toolkit for automated loading, processing, and analysis of spectral-edited MRS data. It can batch-process multiple datasets and comprises a number of modules for a full analysis pipeline, including: data loading, signal fitting, voxel co-registration to structural MR images, tissue segmentation, and tissue correction. Presently, Gannet is able to process edited MRS data from the three major vendors and is compatible with all vendor-specific file formats. Data acquired by the following editing approaches are compatible: MEGA-PRESS, HERMES, HERCULES.",
    "keywords": [
      "magnetic resonance spectroscopy",
      "edited MRS",
      "GABA",
      "GitHub",
      "MATLAB"
    ],
    "keyReferences": [
      {
        "referenceText": "Edden RAE, Puts NAJ, Harris AD, Barker PB, Evans CJ. Gannet: A batch-processing tool for the quantitative analysis of gamma-aminobutyric acid-edited MR spectroscopy spectra. J. Magn. Reson. Imaging 2014;40:1445–1452",
        "referenceURL": "http://doi.wiley.com/10.1002/jmri.24478"
      },
      {
        "referenceText": "Harris AD, Puts NAJ, Edden RAE. Tissue correction for GABA-edited MRS: Considerations of voxel composition, tissue segmentation, and tissue relaxations. J. Magn. Reson. Imaging 2015;42:1431–1440 doi: 10.1002/jmri.24903.",
        "referenceURL": "http://doi.wiley.com/10.1002/jmri.24903"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Gannet blog",
        "URL": "http://www.gabamrs.com"
      }
    ],
    "dateAddedToMRHub": "2019-06-10",
    "dateSoftwareLastUpdated": "2019-01-24",
    "citationSearchString": "b0cb7cfd34668b63b1393624e9e6083bddf42f42",
    "citationCount": "367"
  },
  {
    "name": "GPI (Graphical Programming Interface)",
    "category": "Multipurpose",
    "shortDescription": "Graphical integrated development environment for scientific algorithms",
    "imageFile": "gpi.png",
    "mainURL": "http://gpilab.com/downloads/",
    "repoURL": "https://github.com/gpilab/framework",
    "principalDevelopers": "Ashley Anderson, Daniel Borup, Nick Zwart",
    "longDescription": "The goal of GPI is to minimize the barrier to organizing and developing complex scientific algorithms. GPI can be thought of as an integrated development environment for Python -- algorithm elements (i.e., nodes) can be linked together to form a flow diagram that is then executed according to the diagram hierarchy. At the node level, the common API and UI elements allow other developers to easily integrate and use your code. The visual and modular nature of GPI also allows concise communication of your work with your collaborators and provides an intuitive mechanism for others to start interacting with your research.",
    "keywords": [
      "programming",
      "graphical",
      "development",
      "collaboration",
      "teaching",
      "reconstruction",
      "ide"
    ],
    "keyReferences": [
      {
        "referenceText": "Graphical programming interface: A development environment for MRI methods",
        "referenceURL": "http://doi.org/10.1002/mrm.25528"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Tutorials for new users",
        "URL": "http://gpilab.com/screencasts/"
      },
      {
        "resourceType": "GPI Node Developer's Guide",
        "URL": "http://docs.gpilab.com/en/develop/NodeDev/devguide.html"
      }
    ],
    "dateAddedToMRHub": "2019-05-30",
    "dateSoftwareLastUpdated": "2021-06-24",
    "citationSearchString": "10.1002/mrm.25528",
    "citationCount": "37"
  },
  {
    "name": "Water/Fat Separated MR Thermometry",
    "category": "Reconstruction",
    "shortDescription": "Algorithm to compute PRF-shift based MR thermometry in mixed water and fatty tissues, while also accounting for errors due to motion and scanner drift.",
    "imageFile": "WFTherm.png",
    "mainURL": "https://github.com/poormanme/waterFatSeparated_MRThermometry",
    "repoURL": "https://github.com/poormanme/waterFatSeparated_MRThermometry",
    "principalDevelopers": "<a href=\"https://scholar.google.com/citations?user=_whgkpcAAAAJ&hl=en&oi=ao\">Megan Poorman</a>, William Grissom",
    "longDescription": "This code repository, written in Matlab, implements an algorithm for real-time-compatible water/fat separated MR thermometry in aqueous and fatty tissues. It is based on a hybrid referenceless multi-baseline thermometry approach and is robust to errors from motion, respiration, and scanner drift. The algorithm should be accurate in tissues containing between 0% and 90% fat. A numerical phantom and demo simulation is provided to guide the user in implementation of the algorithm for their own application.",
    "keywords": [
      "proton resonance frequency shift",
      "temperature mapping",
      "fat separation",
      "thermometry"
    ],
    "keyReferences": [
      {
        "referenceText": "Poorman ME, Braškute˙ I, Bartels LW, Grissom WA. Multi-echo MR thermometry using iterative separation of baseline water and fat images. Magn Reson Med. 2018;(September):1–14. ",
        "referenceURL": "https://doi.org/10.1002/mrm.27567"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-29",
    "dateSoftwareLastUpdated": "2018-09-26",
    "citationSearchString": "10.1002/mrm.27567",
    "citationCount": "11"
  },
  {
    "name": "MRtrix3",
    "category": "Image processing",
    "shortDescription": "Advanced tools for the analysis of diffusion MRI data",
    "imageFile": "mrtrix3.png",
    "mainURL": "http://www.mrtrix.org",
    "repoURL": "https://github.com/MRtrix3/mrtrix3",
    "principalDevelopers": "J-Donald Tournier, Robert E. Smith, David Raffelt, Maximilian Pietsch, Rami Tabarra, Daan Christiaens, Thijs Dhollander, Ben Jeurissen, Chun-Hung Yeh",
    "longDescription": "MRtrix provides a set of tools to perform various advanced diffusion MRI analyses, including constrained spherical deconvolution (CSD), probabilistic tractography, track-density imaging, and apparent fibre density.",
    "keywords": [
      "diffusion",
      "tractography",
      "spherical deconvolution",
      "ODF"
    ],
    "keyReferences": [
      {
        "referenceText": "MRtrix3: A fast, flexible and open software framework for medical image processing and visualisation",
        "referenceURL": "https://www.biorxiv.org/content/10.1101/551739v1"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Documentation",
        "URL": "http://userdocs.mrtrix.org/en/latest/"
      },
      {
        "resourceType": "User forum",
        "URL": "http://community.mrtrix.org/"
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2022-02-21",
    "citationSearchString": "f6dbe95c44802c048c0d50e30b7593315eac5afe",
    "citationCount": "429"
  },
  {
    "name": "gammaSTAR",
    "category": "Pulse sequences",
    "shortDescription": "gammaSTAR: Platform-Independent MR Sequence Development",
    "imageFile": "gammastar.png",
    "mainURL": "https://gamma-star.mevis.fraunhofer.de",
    "repoURL": "https://gamma-star.mevis.fraunhofer.de/download/gammaSTAR_current.zip",
    "principalDevelopers": "Cristoffer Cordes, Simon Konstandin, Daniel Hoinkiss, Daniel Mensing, Saulius Archipovas, Robin Wilke, Matthias Günther",
    "longDescription": "gammaSTAR is an MRI pulse sequence development framework. gammaSTAR sequences are vendor-independent, self-contained and portable. They and can be configured to match hardware limitations and desired protocol settings after being loaded onto a device. The core logic is written in the scripting language Lua, which is easily embeddable into C/C++ frameworks, resulting in very low-footprint driver implementations. Sequences can be viewed, configured and shared through a web-technology based tool that requires no internet or network access, running completely in-browser. Sequence computation is made efficient by exploiting the underlying directed acyclic graph structure for essentially all parameter calculations. gammaSTAR is designed to enable modular sequence development and state-of-the-art MRI techniques.",
    "keywords": [
      "sequence",
      "development",
      "lua",
      "c++",
      "pulseq",
      "pulse sequences",
      "vendor neutrality",
      "Video tutorial",
      "Docker"
    ],
    "keyReferences": [
      {
        "referenceText": "Cordes, C, Konstandin, S, Porter, D, Günther, M. Portable and platform‐independent MR pulse sequence programs. Magn Reson Med. 2020; 83: 1277– 1290.",
        "referenceURL": "https://doi.org/10.1002/mrm.28020"
      }
    ],
    "extraResources": [
      {
        "resourceType": "IPFS Mirror",
        "URL": "https://ipfs.io/ipns/QmQYBinMaYbMFsSQ2TwrYEvKk5BBnan1EsjVcUdDnupYBW"
      },
      {
        "resourceType": "Demo Videos",
        "URL": "https://www.youtube.com/playlist?list=PL0A7u8ZJFB4VlI7gjuLfvoe2iQ-koE8tZ"
      }
    ],
    "dateAddedToMRHub": "2019-05-29",
    "dateSoftwareLastUpdated": "2020-01-29",
    "citationSearchString": "10.1002/mrm.28020",
    "citationCount": "4"
  },
  {
    "name": "SigPy",
    "category": "Reconstruction",
    "shortDescription": "CPU/GPU Python package for iterative reconstruction",
    "imageFile": "sigpy_logo.png",
    "mainURL": "https://sigpy.readthedocs.io",
    "repoURL": "https://github.com/mikgroup/sigpy",
    "principalDevelopers": "Frank Ong",
    "longDescription": "SigPy is a Python package for signal processing, with emphasis on iterative methods. It is built to operate directly on NumPy arrays on CPU and CuPy arrays on GPU. SigPy also provides several domain-specific submodules: sigpy.plot for multi-dimensional array plotting, sigpy.mri for MRI iterative reconstruction, and sigpy.learn for dictionary learning.",
    "keywords": [
      "iterative-reconstruction",
      "compressed sensing",
      "GPU",
      "ESPIRiT",
      "GPU-NUFFT",
      "GitHub",
      "Python"
    ],
    "keyReferences": [
      {
        "referenceText": "Frank Ong, and Michael Lustig. SigPy: A Python Package for High Performance Iterative Reconstruction. In Proc. Intl. Soc. Mag. Reson. Med. 27;4819",
        "referenceURL": "http://indexsmart.mirasmart.com/ISMRM2019/PDFfiles/4819.html"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-23",
    "dateSoftwareLastUpdated": "2022-01-23",
    "citationSearchString": "SigPy",
    "citationCount": "0"
  },
  {
    "name": "retroMoCoBox",
    "category": "Reconstruction",
    "shortDescription": "MATLAB-based retrospective motion-correction of 3D k-space",
    "imageFile": "retromocobox.png",
    "mainURL": "https://github.com/dgallichan/retroMoCoBox",
    "repoURL": "https://github.com/dgallichan/retroMoCoBox",
    "principalDevelopers": "Daniel Gallichan",
    "longDescription": "Matlab toolbox for retrospective motion-correction of 3D MRI k-space data - as used for my work using 3D FatNavs to obtain the motion information. Example data is provided to give an indication of what the toolbox can be used for - including how to simulate the effect of different motion profiles on an acquisition. As this code needs to be able to do the full reconstruction pipeline, it also contains an implementation of 2D GRAPPA. The motion-corrected k-space is regridded using the NUFFT from Jeffrey Fessler's MIRT toolbox (separate download).",
    "keywords": [
      "Github",
      "MATLAB",
      "motion-correction",
      "k-space"
    ],
    "keyReferences": [
      {
        "referenceText": "Retrospective correction of involuntary microscopic head movement using highly accelerated fat image navigators (3D FatNavs) at 7T, Gallichan, Marques and Gruetter, MRM 2015",
        "referenceURL": "http://doi.wiley.com/10.1002/mrm.25670"
      },
      {
        "referenceText": "Optimizing the acceleration and resolution of three-dimensional fat image navigators for high-resolution motion correction at 7T, Gallichan and Marques, MRM 2016",
        "referenceURL": "http://doi.wiley.com/10.1002/mrm.26127"
      },
      {
        "referenceText": "Motion-Correction Enabled Ultra-High Resolution In-Vivo 7T-MRI of the Brain, Federau and Gallichan, Plos One 2016",
        "referenceURL": "http://dx.plos.org/10.1371/journal.pone.0154974"
      },
      {
        "referenceText": "Evaluation of 3D fat-navigator based retrospective motion correction in the clinical setting of patients with brain tumors, Glessgen, Gallichan, Moor, Hainc and Federau, Neuroradiology 2019",
        "referenceURL": "https://doi.org/10.1007/s00234-019-02160-w"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-23",
    "dateSoftwareLastUpdated": "2022-02-28",
    "citationSearchString": "10.1002/mrm.25670",
    "citationCount": "83"
  },
  {
    "name": "Berkeley Advanced Reconstruction Toolbox (BART)",
    "category": "Reconstruction",
    "shortDescription": "Reconstruction toolbox and programming library for parallel imaging and compressed sensing available for Linux, Mac OS X, and Windows.",
    "imageFile": "bart.png",
    "mainURL": "http://mrirecon.github.io/bart/",
    "repoURL": "https://github.com/mrirecon/bart",
    "principalDevelopers": "Martin Uecker, Jon Tamir and Frank Ong",
    "longDescription": "The Berkeley Advanced Reconstruction Toolbox (BART) is a free and open-source image- reconstruction framework for Computational Magnetic Resonance Imaging. It consists of a programming library (for C/C++) and a toolbox of command-line programs. The library provides common operations on multi-dimensional arrays, (non-uniform) Fourier and (divergence-free) wavelet transforms, as well as generic implementations of iterative optimization algorithms (CG, IST, FISTA, ADMM, IRGNM, ...) supporting various types of regularization terms (l2, l1-wavelet, total-variation, low-rank, multi-scale low-rank ...) using pre-defined functions. Parallel computation on multi-core systems and on Graphical Processing Units (GPUs) is supported. The command-line tools provide direct access to basic operations on multi-dimensional arrays as well as efficient implementations of many calibration and reconstruction algorithms for parallel imaging and compressed sensing (SENSE, ESPIRiT, NLINV, SAKE, ...).",
    "keywords": [
      "GitHub",
      "GPU",
      "ESPIRiT",
      "NUFFT",
      "iterative-reconstruction",
      "compressed sensing",
      "non-Cartesian",
      "parallel imaging"
    ],
    "keyReferences": [
      {
        "referenceText": "Martin Uecker, Peng Lai, Mark J. Murphy, Patrick Virtue, Michael Elad, John M. Pauly, Shreyas S. Vasanawala, and Michael Lustig. ESPIRiT - An Eigenvalue Approach to Autocalibrating Parallel MRI: Where SENSE meets GRAPPA. Magn Reson Med 2014; 71:990-1001",
        "referenceURL": "https://doi.org/10.1002/mrm.24751"
      },
      {
        "referenceText": "Martin Uecker, Patrick Virtue, Frank Ong, Mark J. Murphy, Marcus T. Alley, Shreyas S. Vasanawala, and Michael Lustig. Software Toolbox and Programming Library for Compressed Sensing and Parallel Imaging. ISMRM Workshop on Data Sampling and Image Reconstruction, Sedona 2013",
        "referenceURL": "https://www.gwdg.de/~muecker1/toolbox.pdf"
      },
      {
        "referenceText": "Martin Uecker, Frank Ong, Jonathan I Tamir, Dara Bahri, Patrick Virtue, Joseph Y Cheng, Tao Zhang, and Michael Lustig. Berkeley Advanced Reconstruction Toolbox. Annual Meeting ISMRM, Toronto 2015, In Proc. Intl. Soc. Mag. Reson. Med. 23:2486",
        "referenceURL": "http://index.mirasmart.com/ismrm2015/PDFfiles/2486.pdf"
      },
      {
        "referenceText": "Jonathan I Tamir, Frank Ong, Joseph Y Cheng, Martin Uecker, and Michael Lustig. Generalized Magnetic Resonance Image Reconstruction using The Berkeley Advanced Reconstruction Toolbox. ISMRM Workshop on Data Sampling and Image Reconstruction, Sedona 2016",
        "referenceURL": "https://www.gwdg.de/~muecker1/sedona16-bart.pdf"
      },
      {
        "referenceText": "Martin Uecker. Machine Learning Using the BART Toolbox - Implementation of a Deep Convolutional Neural Network for Denoising. Joint Annual Meeting ISMRM-ESMRMB, Paris 2018, In Proc. Intl. Soc. Mag. Reson. Med. 26;2802",
        "referenceURL": "http://indexsmart.mirasmart.com/ISMRM2018/PDFfiles/2802.html"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2022-02-23",
    "citationSearchString": "10.1002/mrm.24751",
    "citationCount": "738"
  },
  {
    "name": "Gadgetron",
    "category": "Reconstruction",
    "shortDescription": "General-purpose, open source, medical imaging reconstruction framework.",
    "imageFile": "gadgetron.png",
    "mainURL": "http://gadgetron.github.io/",
    "repoURL": "https://github.com/gadgetron/gadgetron",
    "principalDevelopers": "Hui Xue, David Hansen, Adrienne Campbell-Washburn",
    "longDescription": "Gadgetron is an Open Source, general-purpose medical imaging reconstruction framework written primarily in C++. It consists of two main components: 1) a set of versatile toolboxes for image signal processing, and 2) a modular, high performance framework for streaming data processing. The streaming framework uses a client server model where the reconstruction job is performed on a server and the client is responsible for sending data and receiving imaging. Clients can be stand-alone command line clients or an imaging device could serve as a client. The framework supports easy prototyping with scripting languages such as Python while supporting transparent integration in clinical work flows. For MRI applications, the Gadgetron supports the vendor independent ISMRM Raw Data format and it comes with high performance image reconstruction pipelines for many standard MRI sequences. Example applications include Cartesian and non-Cartesian parallel imaging, non-linear reconstruction and motion correction. Several performance critical components such as the non-Cartesian Fourier transform have been implemented on GPUs for improved performance. The framework can be used as a complete reconstruction package or the toolboxes can be leveraged in other applications.",
    "keywords": [
      "GitHub",
      "Video tutorial",
      "GPU",
      "inline",
      "online",
      "streaming",
      "AI",
      "machine learning",
      "compressed sensing",
      "non-Cartesian",
      "parallel imaging",
      "vendor neutrality"
    ],
    "keyReferences": [
      {
        "referenceText": "Hansen MS, Sørensen TS. Gadgetron: An Open Source Framework for Medical Image Reconstruction. Magn Reson Med. 2013 Jun;69(6):1768-76.",
        "referenceURL": "https://doi.org/10.1002/mrm.24389"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Video Tutorial",
        "URL": "https://www.youtube.com/watch?v=yLo4j5dQGhY"
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2022-02-24",
    "citationSearchString": "10.1002/mrm.24389",
    "citationCount": "222"
  },
  {
    "name": "gpuNUFFT",
    "category": "Reconstruction",
    "shortDescription": "C++ CUDA accelerated non-uniform FFT for arbitrary 2D/3D data with direct Matlab interface on Windows and Linux",
    "imageFile": "gpunufft.png",
    "mainURL": "https://github.com/andyschwarzl/gpuNUFFT",
    "repoURL": "https://github.com/andyschwarzl/gpuNUFFT",
    "principalDevelopers": "Andreas Schwarzl, Florian Knoll",
    "longDescription": "The computational expensive non-uniform FFT is implemented in C++ by utilizing the NVIDIA CUDA architecture, in order to speed up the execution of the 2D/3D multi-coil Gridding step for arbitrarily shaped k-space data. The software offers a ready-to-use interface to Matlab, similar to the well-known NUFFT Toolbox by Fessler et al., in order to seamlessly enhance the preferred Matlab prototyping process at an early stage. The gpuNUFFT supports the growing importance of non-Cartesian 2D/3D trajectories in the context of iterative image reconstruction, parallel imaging, and compressed sensing by reducing the long computation times during NUFFT operations. Depending on the data size and shape, speedups up to a factor of 40 are possible.",
    "keywords": [
      "GitHub",
      "Video tutorial",
      "GPU",
      "NUFFT"
    ],
    "keyReferences": [
      {
        "referenceText": "F. Knoll, A. Schwarzl, C. Diwoky, and D. Sodickson, gpuNUFFT - an open-source GPU Library for 3D Gridding with direct Matlab interface, in Proceedings of the 22th Annual Meeting of ISMRM, Mailand, 2014 , p4297",
        "referenceURL": "https://cds.ismrm.org/protected/14MProceedings/files/4297.pdf"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Video tutorial",
        "URL": "https://vimeo.com/161037263"
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2022-02-06",
    "citationSearchString": "c788ecd4a6ac9d3d7013a94515ec0718274e9907",
    "citationCount": "60"
  },
  {
    "name": "ISMRMRD",
    "category": "Data format",
    "shortDescription": "Vendor-neutral MRI raw data format based on standard developed by a subcommittee of the ISMRM Sedona 2013 workshop",
    "imageFile": "ismrmrd.png",
    "mainURL": "http://ismrmrd.github.io/",
    "repoURL": "https://github.com/ismrmrd/ismrmrd",
    "principalDevelopers": "<a href=\"http://ismrmrd.github.io/\"><em>See full list of developers.</em></a>",
    "longDescription": "A prerequisite for sharing MRI reconstruction software is a data format that describes typical MRI raw datasets in a vendor neutral manner. The ISMRM Raw Data format is a proposal for such a common MR raw data format, which promotes algorithm and data sharing. The file format consists of a flexible header and tagged frames of k-space data. These data elements are stored in an HDF5 file container. Application Programming Interfaces are available for C/C++, MATLAB, and Python. Converters for Bruker, General Electric, Philips, and Siemens proprietary file formats also available (implemented in C++). The proposed raw data format solves a practical problem for the magnetic resonance imaging community. It may serve as a foundation for reproducible research and collaborations. The ISMRM Raw Data format is a completely open and community-driven format, and the scientific community is invited (including commercial vendors) to participate either as users or developers.",
    "keywords": [
      "GitHub",
      "raw data",
      "k-space",
      "vendor neutrality"
    ],
    "keyReferences": [
      {
        "referenceText": "Inati SJ, Naegele JD, Zwart NR, Roopchansingh V, Lizak MJ, Hansen DC, et al. ISMRM Raw data format: A proposed standard for MRI raw datasets. Magn Reson Med. 2016; doi:10.1002/mrm.26089",
        "referenceURL": "https://doi.org/10.1002/mrm.26089"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2022-02-22",
    "citationSearchString": "10.1002/mrm.26089",
    "citationCount": "35"
  },
  {
    "name": "Low Field Simulator",
    "category": "Simulation",
    "shortDescription": "This package is a MATLAB based tool for simulating low-field MRI acquisitions based on high-field acquisition, enables prediction of the minimum field strength requirements for a broad range of MRI techniques.",
    "imageFile": "lowfieldsim.png",
    "mainURL": "https://github.com/usc-mrel/lowfieldsim",
    "repoURL": "https://github.com/usc-mrel/lowfieldsim",
    "principalDevelopers": "Weiyi Chen, Ziyue Wu, Krishna S. Nayak",
    "longDescription": "<p>This package is to develop and evaluate a framework for simulating low-field proton-density weighted MRI acquisitions based on high-field acquisitions, which could be used to predict the minimum B0 field strength requirements for MRI techniques.</p><p>Given MRI raw data, lower field MRI acquisitions can be simulated based on the signal and noise scaling with field strength. Certain assumptions are imposed for the simulation. This package also contains two examples of proton-density weighted MRI applications that demonstrated estimation of minimum field strength requirements: real-time upper airway imaging and liver proton-density fat fraction measurement. More detailed description of the examples can be found in the published reference.</p><p>This package enables prediction of the minimum field strength requirements for a broad range of MRI techniques, and would be particularly useful in the evaluation of de-noising and constrained reconstruction techniques.</p>",
    "keywords": [
      "GitHub",
      "low field"
    ],
    "keyReferences": [
      {
        "referenceText": "Z Wu, W Chen, KS Nayak. Minimum Field Strength Simulator for Proton Density Weighted MRI. PLOS ONE 11(5): e0154711. May 2016.",
        "referenceURL": "https://doi.org/10.1371/journal.pone.0154711"
      },
      {
        "referenceText": "Z Wu, W Chen, KS Nayak. Low-Field Simulation and Minimum Field Strength Requirements. ISMRM Workshop on Data Sampling and Image Reconstruction, Sedona, Arizona, Jan 2016.",
        "referenceURL": "http://cds.ismrm.org/protected/Data16/Program/Abstracts/Wu.pdf"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2016-07-12",
    "citationSearchString": "10.1371/journal.pone.0154711",
    "citationCount": "9"
  },
  {
    "name": "Pulseq",
    "category": "Pulse sequences",
    "shortDescription": "An open source framework for platform-independent MR pulse sequence development and execution",
    "imageFile": "pulseq.png",
    "mainURL": "https://pulseq.github.io/",
    "repoURL": "https://github.com/pulseq/pulseq",
    "principalDevelopers": "Original author: Kelvin Layton (left the MR field)<br />Current developers: Stefan Kroboth, Maxim Zaitsev (Siemens-specific), Jon-Fredrik Nielsen (GE specific), Jochen Leupold (Bruker-specific), Tony Stoecker (JEMRIS)",
    "longDescription": "Pulseq is an open source framework for the development, representation and execution of magnetic resonance (MR) sequences. A central contribution of this project is an open file format to compactly describe MR sequences suitable for execution on an MRI scanner or NMR spectrometer. MATLAB and C++ source code is provided for reading and writing sequence files. An interface for exporting JEMRIS sequences to Pulseq format is available. For the execution of the Pulseq files on the particular platform an additional interpreter pulse sequence is required, which is made available via the corresponding manufacturer's community site or can be acquired directly from the authors.",
    "keywords": [
      "GitHub",
      "pulse sequences",
      "vendor neutrality"
    ],
    "keyReferences": [
      {
        "referenceText": "Layton, K. J., Kroboth, S. , Jia, F. , Littin, S. , Yu, H. , Leupold, J. , Nielsen, J. , Stöcker, T. and Zaitsev, M. (2017), Pulseq: A rapid and hardware‐independent pulse sequence prototyping framework. Magn. Reson. Med., 77: 1544-1552",
        "referenceURL": "https://doi.org/10.1002/mrm.26235"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2021-12-13",
    "citationSearchString": "10.1002/mrm.26235",
    "citationCount": "34"
  },
  {
    "name": "MRiLab",
    "category": "Simulation",
    "shortDescription": "A rapid and versatile numerical MRI simulator with Matlab interface and GPU parallel acceleration on Windows and Linux",
    "imageFile": "mrilab.png",
    "mainURL": "https://leoliuf.github.io/MRiLab/",
    "repoURL": "https://github.com/leoliuf/MRiLab",
    "principalDevelopers": "<a href=\"https://www.researchgate.net/profile/Fang_Liu67\">Fang Liu</a>",
    "longDescription": "<p>The MRiLab is a numerical MRI simulation package. It has been developed and optimized to simulate MR signal formation, k- space acquisition and MR image reconstruction. MRiLab provides several dedicated toolboxes to analyze RF pulse, design MR sequence, configure multiple transmitting and receiving coils, investigate magnetic field related properties and evaluate real-time imaging technique. The main MRiLab simulation platform combined with those toolboxes can be applied to customize various virtual MR experiments which can serve as a prior stage for prototyping and testing new MR technique and application.</p><p>The MRiLab features highly interactive graphical user interface (GUI) for the convenience of fast experiment design and technique prototyping. High simulation accuracy is achieved by simulating discrete spin evolution at small time interval using the Bloch-equation and appropriate tissue model. In order to manipulate large multidimensional spin array, MRiLab employs parallel computing by incorporating latest graphical processing unit (GPU) technique and multi-threading CPU technique. With efficient parallelization, MRiLab can accomplish multidimensional multiple spin species MR simulation at high simulation accuracy and time efficiency, and with low computing hardware cost.</p>",
    "keywords": [
      "GitHub",
      "GPU",
      "tissue exchange models"
    ],
    "keyReferences": [
      {
        "referenceText": "F. Liu, J.V. Velikina, W.F. Block, R. Kijowski, A.A. Samsonov. Fast Realistic MRI Simulations Based on Generalized Multi-Pool Exchange Tissue Model. IEEE Transactions on Medical Imaging. 2016.",
        "referenceURL": "http://ieeexplore.ieee.org/document/7676360/"
      },
      {
        "referenceText": "F. Liu, R. Kijowski, W.F. Block. Performance of Multiple Types of Numerical MR Simulation using MRiLab. In 2014 Proc. Intl. Soc. Mag. Reson. Med. Milan.",
        "referenceURL": "https://cds.ismrm.org/protected/14MPresentations/abstracts/4227.pdf"
      },
      {
        "referenceText": "F. Liu, R. Kijowski, W.F. Block. MRiLab: Performing Fast 3D Parallel MRI Numerical Simulation on A Simple PC. In 2013. Proc. Intl. Soc. Mag. Reson. Med. Salt Lake City.",
        "referenceURL": "https://cds.ismrm.org/protected/13MProceedings/files/2373.PDF"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2019-08-10",
    "citationSearchString": "10.1109/TMI.2016.2620961",
    "citationCount": "39"
  },
  {
    "name": "NYU MR-Fingerprinting Reconstruction Toolbox",
    "category": "Reconstruction",
    "shortDescription": "Reconstruction of quantitative maps of arbitrary MR Fingerprinting data with arbitrary k-space trajectories on all platforms supporting Matlab.",
    "imageFile": "nyu_mrf_recon.png",
    "mainURL": "https://bitbucket.org/asslaender/nyu_mrf_recon",
    "repoURL": "https://bitbucket.org/asslaender/nyu_mrf_recon",
    "principalDevelopers": "<a href=\"https://med.nyu.edu/faculty/jakob-asslaender\">Jakob Assländer</a>",
    "longDescription": "The NYU MR-Fingerprinting Reconstruction Toolbox provides a general and fast framework for reconstructing MRF data. It approximates the fingerprints in a low rank space, which improves the conditioning of the problem and reduces the number of FFT operations significantly. The provided code solves the MRF reconstruction problem with an alternating direction method of multipliers, which transform the non-convex optimization problem into two subproblems, that are very similar to CG-SENSE and the dictionary fitting, respectively. The toolbox is implemented in Matlab and incorporates Fessler’s nuFFT implementation.",
    "keywords": [
      "Bitbucket",
      "fingerprinting",
      "NUFFT",
      "quantitative imaging",
      "relaxometry"
    ],
    "keyReferences": [
      {
        "referenceText": "Assländer, J. , Cloos, M. A., Knoll, F. , Sodickson, D. K., Hennig, J. and Lattanzi, R. (2018), Low rank alternating direction method of multipliers reconstruction for MR fingerprinting. Magn. Reson. Med., 79: 83-96.",
        "referenceURL": "https://doi.org/10.1002/mrm.26639"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2019-08-06",
    "citationSearchString": "10.1002/mrm.26639",
    "citationCount": "120"
  },
  {
    "name": "QUIT",
    "category": "Image processing",
    "shortDescription": "A set of tools for quantitative imaging, principally relaxometry",
    "imageFile": "quit.png",
    "mainURL": "https://github.com/spinicist/QUIT",
    "repoURL": "https://github.com/spinicist/QUIT",
    "principalDevelopers": "Tobias Wood",
    "longDescription": "QUIT provides implementations of multiple quantitative MRI algorithms as command-line tools written in C++ and using the high-quality Insight Toolkit [@ITK], CERES [@CERES] and Eigen [@Eigen] libraries. They are multi-threaded where-ever possible. They are easy to include into shell-script based processing pipelines, and are easy to use with a queue system such as the Sun Grid Engine. They are hence suitable for the high-throughput processing that is required for timely analysis of a large neuroimaging study.",
    "keywords": [
      "GitHub",
      "quantitative imaging",
      "relaxometry"
    ],
    "keyReferences": [
      {
        "referenceText": "Wood, (2018). QUIT: QUantitative Imaging Tools . Journal of Open Source Software, 3(26), 656",
        "referenceURL": "http://joss.theoj.org/papers/10.21105/joss.00656"
      },
      {
        "referenceText": "Wood, T. C., Simmons, C., Hurley, S. A., Vernon, A. C., Torres, J., Dell’Acqua, F., ... Cash, D. (2016). Whole-brain ex-vivo quantitative MRI of the cuprizone mouse model. PeerJ, 4, e2632",
        "referenceURL": "https://doi.org/10.7717/peerj.2632"
      },
      {
        "referenceText": "Vanes, L. D., Mouchlianitis, E., Wood, T. C., & Shergill, S. S. (2018). White matter changes in treatment refractory schizophrenia: Does cognitive control and myelination matter? NeuroImage: Clinical, 18, 186–191",
        "referenceURL": "https://doi.org/10.1016/j.nicl.2018.01.010"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2021-12-14",
    "citationSearchString": "10.21105/joss.00656",
    "citationCount": "13"
  },
  {
    "name": "JEMRIS",
    "category": "Simulation",
    "shortDescription": "General-purpose, open source, MRI simulation framework available for Linux, Mac and Windows.",
    "imageFile": "jemris.png",
    "mainURL": "http://www.jemris.org",
    "repoURL": "https://github.com/JEMRIS/jemris",
    "principalDevelopers": "Tony Stöcker, Daniel Pflugfelder, Kaveh Vahedipour",
    "longDescription": "JEMRIS is an extensible MRI simulation framework which provides a versatile MRI sequence development and simulation environment. The development was driven by the desire to achieve generality of simulated 3D MRI experiments reflecting modern MRI systems hardware. The accompanying computational burden is overcome by means of parallel computing. Many aspects of general MRI simulations are covered such as parallel transmit and receive, important off-resonance effects, non-linear gradients, and arbitrary spatiotemporal parameter variations at different levels. The latter can be used to simulate various types of spin motion, e.g. rigid motion, diffusion or flow. JEMRIS is written in C++ and can be used from the command line. The MR experiment configuration is done in XML format and binary I/O utilizes the HDF5 standard. For convenience JEMRIS can also be used via dedicated MATLAB graphical user interfaces. For instance, complex MRI sequences with arbitrary waveforms and inter-dependent modules can be modeled without any programming involved.",
    "keywords": [
      "GitHub",
      "parallel computing",
      "arbitrary waveforms"
    ],
    "keyReferences": [
      {
        "referenceText": "Stöcker, T., Vahedipour, K., Pflugfelder, D., & Shah, N. J. (2010). High-performance computing MRI simulations. Magnetic Resonance in Medicine, 64(1), 18693.",
        "referenceURL": "https://doi.org/10.1002/mrm.22406"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2022-02-23",
    "citationSearchString": "10.1002/mrm.22406",
    "citationCount": "96"
  },
  {
    "name": "Spinal Cord Toolbox (SCT)",
    "category": "Image processing",
    "shortDescription": "Software package to analyze multi-parametric MRI of the spinal cord, available for Linux, OSX and Windows.",
    "imageFile": "spinal_cord_toolbox.png",
    "mainURL": "https://github.com/neuropoly/spinalcordtoolbox",
    "repoURL": "https://github.com/neuropoly/spinalcordtoolbox",
    "principalDevelopers": "<a href=\"https://github.com/neuropoly/spinalcordtoolbox/graphs/contributors\"><em>Please see here for full list</em></a>",
    "longDescription": "SCT is a comprehensive and open-source library of analysis tools for multi-parametric MRI of the spinal cord, written in Python and available for Linux, OSX and Windows. It includes templates and atlases of the spinal cord along with state-of-the-art methods for automatic segmentation, registration and metric atlas-based analysis.",
    "keywords": [
      "GitHub",
      "spine",
      "templates",
      "atlases"
    ],
    "keyReferences": [
      {
        "referenceText": "De Leener B, Levy S, Dupont SM, Fonov VS, Stikov N, Louis Collins D, Callot V, Cohen-Adad J. SCT: Spinal Cord Toolbox, an open-source software for processing spinal cord MRI data. Neuroimage 2017.",
        "referenceURL": "https://www.ncbi.nlm.nih.gov/pubmed/27720818"
      }
    ],
    "extraResources": [
      {
        "resourceType": "",
        "URL": ""
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2021-03-01",
    "citationSearchString": "10.1016/j.neuroimage.2016.10.009",
    "citationCount": "260"
  },
  {
    "name": "qMRLab",
    "category": "Image processing",
    "shortDescription": "qMRLab is a MATLAB/Octave open-source software for quantitative MR image analysis and simulation.",
    "imageFile": "qmrlab.png",
    "mainURL": "https://qmrlab.org",
    "repoURL": "https://github.com/qMRLab/qMRLab",
    "principalDevelopers": "Agah Karakuzu, Mathieu Boudreau, Tanguy Duval, Ilana R. Leppert, Tommy Boshkovski, Julien Cohen-Adad, Nikola Stikov",
    "longDescription": "qMRLab is an open-source software for quantitative MR image analysis. The main goal is to provide the community with an intuitive tool for data fitting, plotting, simulation and protocol optimization for a myriad of different quantitative models. The modularity of the implementation makes it easy to add any additional modules and we encourage everyone to contribute their favorite recipe for qMR.",
    "keywords": [
      "GitHub",
      "Docker",
      "quantitative imaging"
    ],
    "keyReferences": [
      {
        "referenceText": "Cabana, Jean‐François, et al. Quantitative magnetization transfer imaging made easy with q MTL ab: Software for data simulation, analysis, and visualization. Concepts in Magnetic Resonance Part A 44.5 (2015): 263-277.",
        "referenceURL": "https://doi.org/10.1002/cmr.a.21357"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Video tutorial",
        "URL": "https://www.youtube.com/watch?v=-yrbtCYDorI"
      }
    ],
    "dateAddedToMRHub": "2019-05-10",
    "dateSoftwareLastUpdated": "2021-11-04",
    "citationSearchString": "10.1002/cmr.a.21357",
    "citationCount": "38"
  },
  {
    "name": "Yarra Framework",
    "category": "Reconstruction",
    "shortDescription": "Open-source toolkit to support the development and clinical translation of reconstruction techniques",
    "imageFile": "yarra.png",
    "mainURL": "http://yarraframework.com",
    "repoURL": "https://bitbucket.org/yarra-dev/yarraclient",
    "principalDevelopers": "Kai Tobias Block, Roy Wiggins",
    "longDescription": "Yarra is a collection of software tools to support the development and clinical translation of novel MRI reconstruction techniques. The functional scope ranges from automatic collection of clinical raw-data, management and anonymization of raw-data, clinical integration of reconstruction prototypes, and distribution of reconstruction algorithms. Moreover, Yarra provides functions for clinical workflow monitoring and analysis. Support is currently limited to Siemens MRI systems.",
    "keywords": [
      "Bitbucket",
      "offline",
      "compressed sensing",
      "Matlab",
      "Siemens"
    ],
    "keyReferences": [
      {
        "referenceText": "Roy Wiggins and Kai Tobias Block, Yarra Framework – Open-Source Toolkit for Clinical-Translational MRI Research, ISMRM 2019, Weekend Educational Session WE-21AB",
        "referenceURL": "https://s3.amazonaws.com/download.yarraframework.com/doc/ISMRM19_Whitepaper.pdf"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Video Tutorial",
        "URL": "https://www.youtube.com/watch?v=5uX7f5E1pz8"
      },
      {
        "resourceType": "White Paper",
        "URL": "https://s3.amazonaws.com/download.yarraframework.com/doc/ISMRM19_Whitepaper.pdf"
      }
    ],
    "dateAddedToMRHub": "2019-07-03",
    "dateSoftwareLastUpdated": "2022-01-25",
    "citationSearchString": "8c5511d9ecad595dba390a718957be8c84c22f7a",
    "citationCount": "10"
  },
  {
    "name": "DIPY",
    "category": "Multipurpose",
    "shortDescription": "Scientific computing software and community-driven medical imaging organization",
    "imageFile": "dipy.png",
    "mainURL": "https://dipy.org",
    "repoURL": "https://github.com/dipy/dipy",
    "principalDevelopers": "Eleftherios Garyfallidis, Matthew Brett, Bagrat Amirbekian, Ariel Rokem, Stefan van der Walt, Maxime Descoteaux, Ian Nimmo-Smith and DIPY Contributors",
    "longDescription": "DIPY is the paragon 3D/4D+ imaging library in Python. Contains generic methods for spatial normalization, signal processing, machine learning, statistical analysis and visualization of medical images. Additionally, it contains specialized methods for computational anatomy including diffusion, perfusion and structural imaging.",
    "keywords": [
      "DTI",
      "DKI",
      "dMRI",
      "diffusion MRI",
      "neuroimaging",
      "tractography",
      "Diffusion Imaging In Python",
      "ODF",
      "registration"
    ],
    "keyReferences": [
      {
        "referenceText": "Dipy, a library for the analysis of diffusion MRI data",
        "referenceURL": "https://doi.org/10.3389/fninf.2014.00008"
      }
    ],
    "extraResources": [
      {
        "resourceType": "Tutorial",
        "URL": "https://dipy.org/tutorials/"
      },
      {
        "resourceType": "Gallery",
        "URL": "https://dipy.org/gallery/"
      },
      {
        "resourceType": "User Forum",
        "URL": "https://gitter.im/nipy/dipy"
      },
      {
        "resourceType": "Workshop",
        "URL": "https://workshop.dipy.org/"
      }
    ],
    "dateAddedToMRHub": "2020-01-27",
    "dateSoftwareLastUpdated": "2022-02-25",
    "citationSearchString": "a89d23db5695b754bf735ce7c4a9c538aca0760e",
    "citationCount": "648"
  }
]
